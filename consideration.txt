Performance might be an issue during parse SAS dataset and persist data into Oracle; consider replace the following tech stacks to alleviate the thread hold:
-	REDIS – is a powerful distributed cache engine and can be used to temporarily to store parsed data before writing into Oracle permanent table.  Another advantage for using this is also the data archive issue.  This cache mechanism can be set to a specific date and time to be automatically spur 
-	REDIS Queue – though the use of FAST API’s background task is sufficient for the time being.  However, FAST API background task is not a not truly background if some synchronous implementation exist in code.  The result of this is that, it will block any request as long as it is running.  Because of this reason, REDIS RQ might be a better choice.  Redis RQ is a simple Python library for queueing jobs and processing them in the background with workers.  Anytime, a new job is submitted, it will run as a true background process.
-	Uvicorn - use more workers (e.g. uvicorn main:app --workers 4). This will allow up to 4 some long computation in parallel.
